---
- hosts: weatherapp
  become: true
  tasks:
    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu disco stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Install docker-compose
      apt: name=docker-compose state=latest

    - name: Copy weatherapp backend src
      copy:
        src: backend/src
        dest: backend/

    - name: Copy weatherapp backend package.json
      copy:
        src: backend/package.json
        dest: backend/package.json

    - name: Copy weatherapp frontend src
      copy:
        src: frontend/src
        dest: frontend/

    - name: Copy weatherapp frontend package.json
      copy:
        src: frontend/package.json
        dest: frontend/package.json

    - name: Copy weatherapp frontend webpack
      copy:
        src: frontend/webpack.config.js
        dest: frontend/webpack.config.js

    - name: Copy weatherapp docker-compose.yml
      copy:
        src: "docker-compose.yml"
        dest: "docker-compose.yml"

    - name: Copy weatherapp env file
      copy:
        src: weatherapp.env
        dest: weatherapp.env

    - name: Tear down app
      docker_compose:
        project_src: .
        state: absent

    - name: Run app
      docker_compose:
        project_src: .
        build: yes
        state: present
        recreate: always
        restarted: yes

    - name: Install nginx
      apt: name=nginx state=latest

    - name: Copy weatherapp nginx site
      copy:
        src: weatherapp
        dest: /etc/nginx/sites-available/default

    - name: Restart service nginx
      service:
        name: nginx
        state: restarted

    - name: Install acme-nginx
      pip:
        name: acme-nginx

    - name: Run acme-nginx
      become: yes
      command: acme-nginx -d weather.matejc.com

    - name: Cron for acme-nginx
      cron:
        name: "ssl renewal"
        special_time: monthly
        job: "timeout -k 600 -s 9 3600 /usr/local/bin/acme-nginx -d weather.matejc.com >> /var/log/letsencrypt.log 2>&1 || echo 'Failed to renew certificate'"
